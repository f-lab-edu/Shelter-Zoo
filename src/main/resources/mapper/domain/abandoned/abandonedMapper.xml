<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noint.shelterzoo.domain.abandoned.repository.AbandonedRepository">
    <select id="getAbandonedList" parameterType="com.noint.shelterzoo.domain.abandoned.vo.req.AbandonedListRequestVO" resultType="com.noint.shelterzoo.domain.abandoned.vo.res.AbandonedListResponseVO">
        SELECT
            A.seq,
            A.thumbnail,
            A.kind,
            A.kind_detail AS kindDetail,
            A.birth,
            A.gender,
            A.neuter,
            A.notice_end AS noticeEnd,
            IF(P.seq IS NULL, 0, 1) AS isPin
        FROM abandoned_pet A
        INNER JOIN shelter S ON S.seq = A.shelter_seq
        LEFT JOIN pin_up P ON A.seq = P.pet_seq AND P.user_seq = #{userSeq}
        <where>
            <if test="location != '전체'">
                AND S.location = #{location}
            </if>
            <if test="kind != '전체'">
                AND A.kind = #{kind}
            </if>
            <if test="gender.name != 'ALL'">
                AND A.gender = #{gender.initial}
            </if>
            <if test="neuter.name != 'ALL'">
                AND A.neuter = #{neuter.initial}
            </if>
        </where>
        ORDER BY A.seq DESC
       <!-- LIMIT 0, #{pageSize} -->
    </select>
    <select id="getAbandonedPetDetail" parameterType="long" resultType="com.noint.shelterzoo.domain.abandoned.vo.res.AbandonedDetailResponseVO">
        SELECT A.seq
             , A.happen_place  AS happenPlace
             , A.kind
             , A.kind_detail   AS kindDetail
             , A.color
             , A.birth
             , A.weight
             , A.notice_end    AS noticeEnd
             , A.gender
             , A.neuter
             , A.special_mark  AS specialMark
             , A.img
             , A.adopt_process AS adoptProcess
             , S.name          AS shelterName
             , S.tel           AS shelterTel
             , s.addr          AS shelterAddr
        FROM abandoned_pet A
        INNER JOIN shelter S ON S.seq = A.shelter_seq
        WHERE A.seq = #{petSeq};
    </select>
    <select id="isAdoptAble" parameterType="long" resultType="boolean">
        SELECT COUNT(*)
        FROM abandoned_pet
        WHERE seq = #{petSeq} AND adopt_process IS NULL FOR UPDATE;
    </select>
    <insert id="reservationPet" parameterType="com.noint.shelterzoo.domain.abandoned.vo.req.AdoptReservationRequestVO"
            useGeneratedKeys="true" keyProperty="seq">
        INSERT INTO adopt(user_seq, pet_seq, state, visit_at)
        VALUE(#{userSeq}, #{petSeq}, #{adoptProcess.stateStr}, #{visitDate});
    </insert>
    <update id="updateAdoptProcess" parameterType="com.noint.shelterzoo.domain.abandoned.vo.req.AdoptProcessUpdateRequestVO">
        UPDATE abandoned_pet
        <set>
            <if test="adoptProcess.stateStr == '취소'">
                adopt_process = NULL, update_at = NOW()
            </if>
            <if test="adoptProcess.stateStr != '취소'">
                adopt_process = #{adoptProcess.stateStr}, update_at = NOW()
            </if>
        </set>
        WHERE seq = #{petSeq};
    </update>
    <select id="isReservationPet" parameterType="com.noint.shelterzoo.domain.abandoned.vo.req.AdoptUpdateRequestVO" resultType="com.noint.shelterzoo.domain.abandoned.vo.res.ReservationCheckResponseVO">
        SELECT seq AS adoptSeq
             , state
        FROM adopt
        WHERE user_seq = #{userSeq} AND pet_seq = #{petSeq}
        ORDER BY seq DESC
        LIMIT 1;
    </select>
    <update id="updateAdoptPet" parameterType="com.noint.shelterzoo.domain.abandoned.vo.req.AdoptUpdateRequestVO">
        UPDATE adopt
        SET state = #{adoptProcess.stateStr}, update_at = NOW()
        WHERE user_seq = #{userSeq} AND pet_seq = #{petSeq}
        ORDER BY seq DESC
        LIMIT 1;
    </update>
    <select id="getDateDiffFromNow" parameterType="com.noint.shelterzoo.domain.abandoned.vo.req.AdoptUpdateRequestVO" resultType="com.noint.shelterzoo.domain.abandoned.vo.res.AdoptCancelDateDiffResponseVO">
        SELECT DATEDIFF(A.create_at, NOW()) AS createdDiff
             , DATEDIFF(AP.notice_end, NOW()) AS noticeEndDiff
        FROM adopt A
        INNER JOIN abandoned_pet AP ON A.pet_seq = AP.seq
        WHERE A.user_seq = #{userSeq} AND A.pet_seq = #{petSeq}
        ORDER BY A.seq DESC LIMIT 1;
    </select>
</mapper>
